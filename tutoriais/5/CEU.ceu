#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;
input int SDL_DT;
var _SDL_Window[] win;
    finalize
        win = _SDL_CreateWindow("My window name", _SDL_WINDOWPOS_CENTERED,
                                         _SDL_WINDOWPOS_CENTERED,
                                         640, 800,
                                         _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(win);
    end

var _SDL_Renderer[] ren;
    finalize
        ren = _SDL_CreateRenderer(win, -1, 0);
    with
        _SDL_DestroyRenderer(ren);
    end

var _SDL_Rect quad;
    quad.x = 100;
    quad.y = 100;
    quad.w = 50;
    quad.h = 50;

var _SDL_Color red;
    red.r = 0xFF;
    red.g = 0x00;
    red.b = 0x00;

var _SDL_Color blue;
    blue.r = 0x00;
    blue.g = 0x00;
    blue.b = 0xFF;


par/or do
    await SDL_QUIT;
with
    var _SDL_Color oldcolor;
    every SDL_REDRAW do
        _SDL_GetRenderDrawColor(ren,&oldcolor.r,&oldcolor.g,&oldcolor.b,&oldcolor.a);
        
        _SDL_SetRenderDrawColor(ren, 0,0,0,0xFF);
        _SDL_RenderFillRect(ren, null);
        
        _SDL_SetRenderDrawColor(ren,oldcolor.r,oldcolor.g,oldcolor.b,oldcolor.a);
        
        _SDL_RenderFillRect(ren, &quad);
        _SDL_RenderPresent(ren);
    end
with
    loop do
        _SDL_SetRenderDrawColor(ren, red.r,red.g,red.b,0xFF);
        await 1s;
        _SDL_SetRenderDrawColor(ren, blue.r,blue.g,blue.b,0xFF);
        await 1s;
    end
with
    var int ms;
    var float speed = 0.05;
    every ms in SDL_DT do
        quad.x = quad.x + speed*ms;
    end
end
escape 0;
