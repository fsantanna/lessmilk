
class Tween with
    var void* value;
    //an organism value reference to be tweened
    var int type;
    /*
     0 linear
     1 quadratic 
    */
    // http://docs.phaser.io/Easing.js.html
    //function pointer to a custom easing function?
    var float from;
    //initial value (if null, the actual value)
    var float to;
    //end value
    var float duration;
    //in ms, the duration of the tween, usually is proportional to the delta value( to - from)
    var int delay;
    //in ms
    //default = 0
    var bool autostart;
    //if false, awaits an event
    event void start;
    var int repeat;
    //<0 repeats forever
    //else repeats the amount given
    //default = 0
    var int pendulum;
    //repeat but reverse the easing function on odd repetitions.
    //to be clear, it makes two paths: 
    //a forward path, with the normal easing function
    //and a backward path, with the reversed easing function
    //it should create a pendulum effect, returning the value to its original state, if not interrupted
    //<0 pendulum forever
    //else repeats the amount given
    //default = 0

do
end
